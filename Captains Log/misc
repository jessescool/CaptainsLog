### OG TITLE BAR

HStack {
    NavigationLink(destination: ProfileView(showingProfileView: $showingProfileView)) {
        Image(systemName: "person")
            .padding(.leading, 15)
            .foregroundColor(.blue)
    }
    
    Spacer()
    Text("Recording").font(.title).bold()
    Spacer()
    
    NavigationLink(destination: SettingsView(showingSettingsView: $showingSettingsView)) {
        Image(systemName: "gear")
            .padding(.trailing, 15)
            .foregroundColor(.blue)
    }
}
.padding()






        NavigationView {
            TabView {
                TitleView()
                    .navigationBarTitleDisplayMode(.inline)
                    .navigationTitle("Record")
                    .toolbar {
                        ToolbarItem(placement: .navigationBarLeading) {
                            NavigationLink(destination: ProfileView()) {
                                Image(systemName: "person")
                                    .padding(.leading, 15)
                            }
                        }
                        ToolbarItem(placement: .navigationBarTrailing) {
                            NavigationLink(destination: SettingsView()) {
                                Image(systemName: "gear")
                                    .padding(.trailing, 15)
                            }
                        }
                    }
                LogbookView(logs: logBook)
                    .navigationBarTitleDisplayMode(.inline)
                    .navigationTitle("Logbook")
            }
            .tabViewStyle(.page(indexDisplayMode: .never))



            
//            if filtering {
//                ScrollView(.horizontal, showsIndicators: false) {
//                    HStack {
//                        ForEach(1..<10) { _ in
//                            Button {
//                                Text("Astronaut details")
//                            } label: {
//                                Image(systemName: "globe")
//                                    .imageScale(.large)
//                                    .frame(width: 104, height: 72)
//                                    .clipShape(Capsule())
//                                    .overlay(Capsule().strokeBorder(.white, lineWidth: 1))
//                            }
//                        }
//                    }
//                }
//            }

//func getCreationDate(for file: URL) -> Date {
//    if let attributes = try? FileManager.default.attributesOfItem(atPath: file.path) as [FileAttributeKey: Any],
//        let creationDate = attributes[FileAttributeKey.creationDate] as? Date {
//        return creationDate
//    } else {
//        return Date()
//    }
//}


    
//    func fetchRecordings() {
//        recordings.removeAll()
//
//        let fileManager = FileManager.default
//        let documentDirectory = fileManager.urls(for: .documentDirectory, in: .userDomainMask)[0]
//        let directoryContents = try! fileManager.contentsOfDirectory(at: documentDirectory, includingPropertiesForKeys: nil)
//        for audio in directoryContents {
//            let recording = Recording(fileURL: audio, createdAt: getCreationDate(for: audio))
//            recordings.append(recording)
//        }
//
//        recordings.sort(by: { $0.createdAt.compare($1.createdAt) == .orderedAscending})
//    }
    
